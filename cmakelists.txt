cmake_minimum_required(VERSION 2.6)
project(ARGGE)

add_definitions(-DSDL_MAIN_HANDLED)
set(CMAKE_EXECUTABLE_SUFFIX ".html")

include_directories(
  src)

if(MSVC)
 include_directories(
   ${PROJECT_SOURCE_DIR}/contrib/msvc-windows-x86/include)
 link_directories(
   ${PROJECT_SOURCE_DIR}/contrib/msvc-windows-x86/lib)
else()
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -s USE_SDL=2 -s DISABLE_EXCEPTION_CATCHING=0")
endif()

add_library(rend
  src/rend/Exception.cpp
  src/rend/Context.cpp
  src/rend/Texture.cpp
  src/rend/RenderTexture.cpp
  src/rend/Shader.cpp
  src/rend/Buffer.cpp
  src/rend/Mesh.cpp
  src/rend/Util.cpp
)

#.h files included to show in VS
add_library(argge
  src/argge/Component.cpp
  src/argge/Core.cpp
  src/argge/Entity.cpp
  src/argge/Exception.cpp
  src/argge/Image.cpp
  src/argge/Renderer.cpp
  src/argge/Screen.cpp
  src/argge/Transform.cpp

  src/argge/ARGGE.h
  src/argge/Component.h
  src/argge/Core.h
  src/argge/Entity.h
  src/argge/Exception.h
  src/argge/Image.h
  src/argge/Renderer.h
  src/argge/Screen.h
  src/argge/Transform.h
)

if(MSVC OR MINGW)
  target_link_libraries(rend SDL2 glew32 opengl32)
  target_link_libraries(argge rend SDL2 glew32)
else()
  target_link_libraries(rend SDL2 GLEW GL)
  target_link_libraries(argge rend SDL2 GLEW)
endif()

add_executable(demo
  src/demo/main.cpp
)
target_link_libraries(demo argge)